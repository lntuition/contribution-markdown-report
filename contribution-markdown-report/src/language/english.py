from typing import List

from language.base import LanguageSetting


class EnglishSetting(LanguageSetting):
    def header_greeting(self, username: str) -> str:
        return f"Welcome to {username}'s contribution report"

    def header_notice(self, repo_url: str, issue_url: str) -> str:
        return f"""
            This report is generated by [contribution-markdown-report]({repo_url}).
            If you have any question or problem, please report [here]({issue_url}).
            I hope this report will be a companion for your contribution trip."""

    def summary_title(self) -> str:
        return "Summary"

    def summary_today(self, today: str, length: str, count: str) -> str:
        return f"{today} was {length}th day since the start of trip, and there was {count} new contribution."

    def summary_maximum(self, date: str, count: str) -> str:
        return f"Daily maximum contribution day is {date}, which is {count}."

    def summary_total(self, sum: str, avg: str) -> str:
        return f"During the trip, total contribuition count is {sum} and average contribution count is {avg}."

    def summary_peak(self, length: str, start: str, end: str) -> str:
        return f"Longest continuous contribution trip was {length} days from {start} to {end}."

    def summary_cur_peak(self, length: str, start: str) -> str:
        return f"Current continuous contribution trip is {length} days from {start}."

    def graph_title(self) -> str:
        return "Graph"

    def graph_dayofweek_label(self) -> List[str]:
        return ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]

    def graph_month_label(self) -> List[str]:
        return [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
        ]

    def graph_contribution_axis(self) -> str:
        return "contribution count"

    def graph_day_axis(self) -> str:
        return "day"

    def graph_dayofweek_axis(self) -> str:
        return "day of week"

    def graph_month_axis(self) -> str:
        return "month"

    def graph_count_sum_recent_title(self) -> str:
        return "Number of days per contribution up to the last 4 weeks"

    def graph_count_sum_full_title(self) -> str:
        return "Number of days per contribution"

    def graph_dayofweek_sum_recent_title(self) -> str:
        return "Number of contribution per day of week up to the last 12 weeks"

    def graph_dayofweek_mean_full_title(self) -> str:
        return "Average of contribution per day of week"

    def graph_month_sum_recent_title(self) -> str:
        return "Number of contribution per month up to the last year"

    def graph_month_mean_full_title(self) -> str:
        return "Average of contribution per month"
