from __future__ import annotations

import warnings
from typing import List, Mapping


class SkeletonFactory:
    __string_map: Mapping[str, Mapping[str, str]] = {
        "english": {
            # Header section
            "header-section": "Welcome to {user}'s contribution report",
            "repository": "This report is generated by {link}",
            "repository-title": "contribuition-markdown-report",
            "issue": "If you have any question or problem, please report {link}",
            "issue-title": "issue",
            # Summary section
            "summary-section": "Summary",
            "today": "{date} was {length}th day since the start of trip, and there was {count} new contribution",
            "today-peak": "Current continuous contribution trip is {length} days from {start}",
            "max": "Maximum contribution day is {date}, which is {count}",
            "max-peak": "Longest continuous contribution trip was {length} days from {start} to {end}",
            "total": "During the trip, total contribuition count is {sum} and average contribution count is {avg}",
            # Graph section
            "graph-section": "Graph",
            "count-sum-recent": "Number of days per contribution up to the last 4 weeks",
            "count-sum-full": "Number of days per contribution",
            "dayofweek-sum-recent": "Number of contribution per day of week up to the last 12 weeks",
            "dayofweek-mean-full": "Average of contribution per day of week",
            "month-sum-recent": "Number of contribution per month up to the last year",
            "year-sum-full": "Number of contribution per year",
            "contribution-count": "contribution count",
            "day": "day",
            "dayofweek": "dayofweek",
            "month": "month",
            "year": "year",
        },
    }

    __list_map: Mapping[str, Mapping[str, List[str]]] = {
        "english": {
            "dayofweek": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
            "month": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        },
    }

    def __init__(self, language: str) -> None:
        default_language = "english"
        supported_language = [
            default_language,  # english
        ]

        language = language.lower()
        if language not in supported_language:
            warnings.warn("Not supported languge, use default setting")
            language = default_language

        self.__language = language

    def get_string_map(self) -> Mapping[str, str]:
        return self.__string_map[self.__language]

    def get_list_map(self) -> Mapping[str, List[str]]:
        return self.__list_map[self.__language]
