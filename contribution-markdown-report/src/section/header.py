import warnings

from section.base import Section


class HeaderSetting:
    @staticmethod
    def title(user: str) -> str:
        return f"Welcome to {user}'s contribution report"

    @staticmethod
    def repository(url: str) -> str:
        return f"This report is generated by [contribution-markdown-report]({url})."

    @staticmethod
    def issue(url: str) -> str:
        return f"If you have any question or problem, please report [here]({url})."

    @staticmethod
    def ending() -> str:
        return "I hope this report will be a companion for your contribution trip."


class HeaderSettingFactory:
    @staticmethod
    def create_setting(language: str) -> HeaderSetting:
        if language == "english":  # Default
            pass
        else:
            warnings.warn("Not supported languge, use default setting")

        return HeaderSetting()


class HeaderSection(Section):
    def __init__(self, user: str, setting: HeaderSetting) -> None:
        self.__user = user
        self.__setting = setting

    def write(self) -> str:
        repo_url = "https://github.com/lntuition/contribution-markdown-report"
        issue_url = f"{repo_url}/issues"

        title = self.__setting.title(user=self.__user)
        repository = self.__setting.repository(url=repo_url)
        issue = self.__setting.issue(url=issue_url)
        ending = self.__setting.ending()

        return f"# {title}\n{repository} {issue} {ending} :airplane:\n"
